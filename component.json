{
    "title": "Binary Authorization",
    "description": "The management interface for Binary Authorization, a system providing policy control for images deployed to Kubernetes Engine clusters.\n",
    "docsUrl": "https://cloud.google.com/binary-authorization/",
    "url": "https://api.apis.guru/v2/specs/googleapis.com/binaryauthorization/v1beta1/swagger.json",
    "envVars": {
        "OAUTH_CLIENT_ID": {
            "description": "OAuth Client ID"
        },
        "OAUTH_CLIENT_SECRET": {
            "description": "OAuth Client Secret"
        }
    },
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://binaryauthorization.googleapis.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "oauth2": {
                "label": "Oauth 2.0 authentication",
                "viewClass": "OAuthFieldView"
            }
        },
        "oauth2": {
            "client_id": "{{OAUTH_CLIENT_ID}}",
            "client_secret": "{{OAUTH_CLIENT_SECRET}}",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://www.googleapis.com/oauth2/v4/token",
            "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
            ]
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "binaryauthorization_projects_attestors_delete": {
            "main": "./lib/actions/binaryauthorization_projects_attestors_delete.js",
            "title": "Deletes an attestor. Returns NOT_FOUND if the\nattestor does not exist.",
            "description": "Deletes an attestor. Returns NOT_FOUND if the\nattestor does not exist.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/binaryauthorization_projects_attestors_delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "binaryauthorization_projects_attestors_get": {
            "main": "./lib/actions/binaryauthorization_projects_attestors_get.js",
            "title": "Gets an attestor.\nReturns NOT_FOUND if the attestor does not exist.",
            "description": "Gets an attestor.\nReturns NOT_FOUND if the attestor does not exist.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/binaryauthorization_projects_attestors_get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "binaryauthorization_projects_attestors_update": {
            "main": "./lib/actions/binaryauthorization_projects_attestors_update.js",
            "title": "Updates an attestor.\nReturns NOT_FOUND if the attestor does not exist.",
            "description": "Updates an attestor.\nReturns NOT_FOUND if the attestor does not exist.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/binaryauthorization_projects_attestors_update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "binaryauthorization_projects_attestors_list": {
            "main": "./lib/actions/binaryauthorization_projects_attestors_list.js",
            "title": "Lists attestors.\nReturns INVALID_ARGUMENT if the project does not exist.",
            "description": "Lists attestors.\nReturns INVALID_ARGUMENT if the project does not exist.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/binaryauthorization_projects_attestors_list.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "binaryauthorization_projects_attestors_create": {
            "main": "./lib/actions/binaryauthorization_projects_attestors_create.js",
            "title": "Creates an attestor, and returns a copy of the new\nattestor. Returns NOT_FOUND if the project does not exist,\nINVALID_ARGUMENT if the request is malformed, ALREADY_EXISTS if the\nattestor already exists.",
            "description": "Creates an attestor, and returns a copy of the new\nattestor. Returns NOT_FOUND if the project does not exist,\nINVALID_ARGUMENT if the request is malformed, ALREADY_EXISTS if the\nattestor already exists.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/binaryauthorization_projects_attestors_create.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "binaryauthorization_projects_policy_getIamPolicy": {
            "main": "./lib/actions/binaryauthorization_projects_policy_getIamPolicy.js",
            "title": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
            "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/binaryauthorization_projects_policy_getIamPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "binaryauthorization_projects_policy_setIamPolicy": {
            "main": "./lib/actions/binaryauthorization_projects_policy_setIamPolicy.js",
            "title": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
            "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/binaryauthorization_projects_policy_setIamPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "binaryauthorization_projects_policy_testIamPermissions": {
            "main": "./lib/actions/binaryauthorization_projects_policy_testIamPermissions.js",
            "title": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
            "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/binaryauthorization_projects_policy_testIamPermissions.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}